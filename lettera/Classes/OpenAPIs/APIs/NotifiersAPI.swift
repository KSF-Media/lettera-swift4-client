//
// NotifiersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire



open class NotifiersAPI {
    /**
     Listens to OC Notifier
     
     - parameter body: (body)  
     - parameter token: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func notifyPost(body: Notification, token: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        notifyPostWithRequestBuilder(body: body, token: token).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Listens to OC Notifier
     - POST /notify
     - parameter body: (body)  
     - parameter token: (query)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func notifyPostWithRequestBuilder(body: Notification, token: String? = nil) -> RequestBuilder<Void> {
        let path = "/notify"
        let URLString = letteraAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "token": token
        ])

        let requestBuilder: RequestBuilder<Void>.Type = letteraAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
